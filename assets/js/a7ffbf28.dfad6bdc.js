"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[245],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>h});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var g=r.createContext({}),l=function(e){var t=r.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(g.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,g=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),u=a,h=d["".concat(g,".").concat(u)]||d[u]||c[u]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var g in t)hasOwnProperty.call(t,g)&&(s[g]=t[g]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3054:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(8168),a=(n(6540),n(5680));const i={id:"getting-started",title:"Getting Started",sidebar_position:1,sidebar_label:"Getting Started",slug:"/getting-started"},o=void 0,s={unversionedId:"hedgehog/getting-started",id:"hedgehog/getting-started",title:"Getting Started",description:"Getting Started",source:"@site/../generated-docs/target/mdoc/hedgehog/getting-started.md",sourceDirName:"hedgehog",slug:"/getting-started",permalink:"/scala-hedgehog/docs/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"getting-started",title:"Getting Started",sidebar_position:1,sidebar_label:"Getting Started",slug:"/getting-started"},sidebar:"tutorialSidebar",previous:{title:"Hedgehog",permalink:"/scala-hedgehog/docs/"},next:{title:"Motivation",permalink:"/scala-hedgehog/docs/motivation"}},g={},l=[{value:"Getting Started",id:"getting-started",level:2},{value:"SBT Binary Dependency",id:"sbt-binary-dependency",level:3},{value:"SBT Source Dependency",id:"sbt-source-dependency",level:3},{value:"SBT Testing",id:"sbt-testing",level:3},{value:"IntelliJ",id:"intellij",level:3},{value:"Example",id:"example",level:2},{value:"Guides",id:"guides",level:2}],p={toc:l},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"getting-started"},"Getting Started"),(0,a.yg)("h3",{id:"sbt-binary-dependency"},"SBT Binary Dependency"),(0,a.yg)("p",null,"In your ",(0,a.yg)("inlineCode",{parentName:"p"},"build.sbt"),", add the following ",(0,a.yg)("inlineCode",{parentName:"p"},"libraryDependencies"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'val hedgehogVersion = "0.10.1"\n\nlibraryDependencies ++= Seq(\n  "qa.hedgehog" %% "hedgehog-core" % hedgehogVersion,\n  "qa.hedgehog" %% "hedgehog-runner" % hedgehogVersion,\n  "qa.hedgehog" %% "hedgehog-sbt" % hedgehogVersion\n).map(_ % Test)\n\n')),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"Supported Scala Versions: ",(0,a.yg)("inlineCode",{parentName:"p"},"2.11"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"2.12"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"2.13")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"3.1+"))),(0,a.yg)("h3",{id:"sbt-source-dependency"},"SBT Source Dependency"),(0,a.yg)("p",null,"This project can be added as an SBT ",(0,a.yg)("a",{parentName:"p",href:"https://www.scala-sbt.org/1.x/docs/Multi-Project.html"},"subproject"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'// This can also be a branch name, like \'master\'`, if you want to live on the edge\nval hedgehogVersion = "${COMMIT}"\nval hedgehogUri = uri("https://github.com/hedgehogqa/scala-hedgehog.git#" + hedgehogVersion)\n\nlazy val root =\n  (project in file("."))\n    .dependsOn(ProjectRef(hedgehogUri, "core"))\n    .dependsOn(ProjectRef(hedgehogUri, "runner"))\n    .dependsOn(ProjectRef(hedgehogUri, "sbt-test"))\n')),(0,a.yg)("p",null,"NOTE: Depending on your scala version(s) SBT might ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/sbt/sbt/issues/2901"},"not resolve"),"."),(0,a.yg)("h3",{id:"sbt-testing"},"SBT Testing"),(0,a.yg)("p",null,"Scala Hedgehog comes with a ",(0,a.yg)("em",{parentName:"p"},"very")," primitive runner interface, and supports the\n",(0,a.yg)("a",{parentName:"p",href:"https://www.scala-sbt.org/1.x/docs/Testing.html#Using+Extensions"},"SBT testing extension"),"."),(0,a.yg)("admonition",{title:"NOTE",type:"info"},(0,a.yg)("p",{parentName:"admonition"},"If you're using sbt version ",(0,a.yg)("inlineCode",{parentName:"p"},"1.9.0")," or ",(0,a.yg)("strong",{parentName:"p"},"lower"),", you need to add the following line to your ",(0,a.yg)("inlineCode",{parentName:"p"},"build.sbt")," file:"),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'testFrameworks += TestFramework("hedgehog.sbt.Framework")\n'))),(0,a.yg)("admonition",{title:"NOTE",type:"info"},(0,a.yg)("p",{parentName:"admonition"},"For sbt version ",(0,a.yg)("inlineCode",{parentName:"p"},"1.9.1")," or ",(0,a.yg)("strong",{parentName:"p"},"higher"),", this step is not necessary, as ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/sbt/sbt/pull/7287"},"Hedgehog is supported by default"),".")),(0,a.yg)("h3",{id:"intellij"},"IntelliJ"),(0,a.yg)("p",null,"The IntelliJ scala plugin only has\n",(0,a.yg)("a",{parentName:"p",href:"https://github.com/JetBrains/intellij-scala/tree/idea183.x/scala/runners/src/org/jetbrains/plugins/scala/testingSupport"},"hard-coded support for the most popular test frameworks"),".\nWhile Hedgehog is obviously not included in that list, an may never  be, by extending the runner\n",(0,a.yg)("inlineCode",{parentName:"p"},"Properties")," tests can be run as an application (as ",(0,a.yg)("inlineCode",{parentName:"p"},"Properties")," includes a handy ",(0,a.yg)("inlineCode",{parentName:"p"},"main")," function).\nNOTE: This requires the test to be an ",(0,a.yg)("inlineCode",{parentName:"p"},"object")," and ",(0,a.yg)("em",{parentName:"p"},"not")," a ",(0,a.yg)("inlineCode",{parentName:"p"},"class"),"."),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("p",null,"See the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/hedgehogqa/scala-hedgehog/tree/master/example/shared/src/main/scala/hedgehog/examples/"},"examples")," module for working versions."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'import hedgehog._\nimport hedgehog.runner._\n\nobject PropertyTest extends Properties {\n\n  def tests: List[Test] =\n    List(\n      property("reverse", testReverse)\n    )\n\n  def testReverse: Property =\n    for {\n      xs <- Gen.alpha.list(Range.linear(0, 100)).forAll\n    } yield xs.reverse.reverse ==== xs\n}\n')),(0,a.yg)("h2",{id:"guides"},"Guides"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"guides/"},"Guides")))}c.isMDXComponent=!0}}]);