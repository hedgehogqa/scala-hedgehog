"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[245],{5329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=t(4848),i=t(8453);const r={id:"getting-started",title:"Getting Started",sidebar_position:1,sidebar_label:"Getting Started",slug:"/getting-started"},d=void 0,o={id:"hedgehog/getting-started",title:"Getting Started",description:"Getting Started",source:"@site/../generated-docs/target/mdoc/hedgehog/getting-started.md",sourceDirName:"hedgehog",slug:"/getting-started",permalink:"/scala-hedgehog/docs/getting-started",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"getting-started",title:"Getting Started",sidebar_position:1,sidebar_label:"Getting Started",slug:"/getting-started"},sidebar:"tutorialSidebar",previous:{title:"Hedgehog",permalink:"/scala-hedgehog/docs/"},next:{title:"Motivation",permalink:"/scala-hedgehog/docs/motivation"}},a={},l=[{value:"Getting Started",id:"getting-started",level:2},{value:"SBT Binary Dependency",id:"sbt-binary-dependency",level:3},{value:"SBT Source Dependency",id:"sbt-source-dependency",level:3},{value:"SBT Testing",id:"sbt-testing",level:3},{value:"IntelliJ",id:"intellij",level:3},{value:"Example",id:"example",level:2},{value:"Guides",id:"guides",level:2}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsxs)(n.p,{children:["Documentation assumes that the build tool used is ",(0,s.jsx)(n.a,{href:"https://www.scala-sbt.org/",children:"sbt"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Hedgehog is also supported for Gradle by the\n",(0,s.jsx)(n.a,{href:"https://github.com/dubinsky/scalajs-gradle",children:"Gradle multi-backend Scala plugin"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"sbt-binary-dependency",children:"SBT Binary Dependency"}),"\n",(0,s.jsxs)(n.p,{children:["In your ",(0,s.jsx)(n.code,{children:"build.sbt"}),", add the following ",(0,s.jsx)(n.code,{children:"libraryDependencies"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'val hedgehogVersion = "0.13.0"\n\nlibraryDependencies ++= Seq(\n  "qa.hedgehog" %% "hedgehog-core" % hedgehogVersion,\n  "qa.hedgehog" %% "hedgehog-runner" % hedgehogVersion,\n  "qa.hedgehog" %% "hedgehog-sbt" % hedgehogVersion\n).map(_ % Test)\n\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Supported Scala Versions: ",(0,s.jsx)(n.code,{children:"2.12"}),", ",(0,s.jsx)(n.code,{children:"2.13"})," and ",(0,s.jsx)(n.code,{children:"3.3+"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"sbt-source-dependency",children:"SBT Source Dependency"}),"\n",(0,s.jsxs)(n.p,{children:["This project can be added as an SBT ",(0,s.jsx)(n.a,{href:"https://www.scala-sbt.org/1.x/docs/Multi-Project.html",children:"subproject"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'// This can also be a branch name, like \'master\'`, if you want to live on the edge\nval hedgehogVersion = "${COMMIT}"\nval hedgehogUri = uri("https://github.com/hedgehogqa/scala-hedgehog.git#" + hedgehogVersion)\n\nlazy val root =\n  (project in file("."))\n    .dependsOn(ProjectRef(hedgehogUri, "core"))\n    .dependsOn(ProjectRef(hedgehogUri, "runner"))\n    .dependsOn(ProjectRef(hedgehogUri, "sbt-test"))\n'})}),"\n",(0,s.jsxs)(n.p,{children:["NOTE: Depending on your scala version(s) SBT might ",(0,s.jsx)(n.a,{href:"https://github.com/sbt/sbt/issues/2901",children:"not resolve"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"sbt-testing",children:"SBT Testing"}),"\n",(0,s.jsxs)(n.p,{children:["Scala Hedgehog comes with a ",(0,s.jsx)(n.em,{children:"very"})," primitive runner interface, and supports the\n",(0,s.jsx)(n.a,{href:"https://www.scala-sbt.org/1.x/docs/Testing.html#Using+Extensions",children:"SBT testing extension"}),"."]}),"\n",(0,s.jsxs)(n.admonition,{title:"NOTE",type:"info",children:[(0,s.jsxs)(n.p,{children:["If you're using sbt version ",(0,s.jsx)(n.code,{children:"1.9.0"})," or ",(0,s.jsx)(n.strong,{children:"lower"}),", you need to add the following line to your ",(0,s.jsx)(n.code,{children:"build.sbt"})," file:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'testFrameworks += TestFramework("hedgehog.sbt.Framework")\n'})})]}),"\n",(0,s.jsx)(n.admonition,{title:"NOTE",type:"info",children:(0,s.jsxs)(n.p,{children:["For sbt version ",(0,s.jsx)(n.code,{children:"1.9.1"})," or ",(0,s.jsx)(n.strong,{children:"higher"}),", this step is not necessary, as ",(0,s.jsx)(n.a,{href:"https://github.com/sbt/sbt/pull/7287",children:"Hedgehog is supported by default"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"intellij",children:"IntelliJ"}),"\n",(0,s.jsxs)(n.p,{children:["The IntelliJ scala plugin only has\n",(0,s.jsx)(n.a,{href:"https://github.com/JetBrains/intellij-scala/tree/idea183.x/scala/runners/src/org/jetbrains/plugins/scala/testingSupport",children:"hard-coded support for the most popular test frameworks"}),".\nWhile Hedgehog is obviously not included in that list, an may never  be, by extending the runner\n",(0,s.jsx)(n.code,{children:"Properties"})," tests can be run as an application (as ",(0,s.jsx)(n.code,{children:"Properties"})," includes a handy ",(0,s.jsx)(n.code,{children:"main"})," function).\nNOTE: This requires the test to be an ",(0,s.jsx)(n.code,{children:"object"})," and ",(0,s.jsx)(n.em,{children:"not"})," a ",(0,s.jsx)(n.code,{children:"class"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"https://github.com/hedgehogqa/scala-hedgehog/tree/master/example/shared/src/main/scala/hedgehog/examples/",children:"examples"})," module for working versions."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'import hedgehog._\nimport hedgehog.runner._\n\nobject PropertyTest extends Properties {\n\n  def tests: List[Test] =\n    List(\n      property("reverse", testReverse)\n    )\n\n  def testReverse: Property =\n    for {\n      xs <- Gen.alpha.list(Range.linear(0, 100)).forAll\n    } yield xs.reverse.reverse ==== xs\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"guides",children:"Guides"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"guides/",children:"Guides"})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function d(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);